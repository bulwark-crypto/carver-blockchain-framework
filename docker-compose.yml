version: "3.1"

services:

  # frontend (react project on port 3000)
  client:
    build: docker/client
    container_name: client
    volumes:
      - ./client:/usr/src/service
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    #command: tail -f /dev/null
    command: npm start # For debugging if you comment the line above (to run "npm start" manually)
    networks:
      agent:
        ipv4_address: 172.25.0.105
      default:

  # nchan server (nginx pub/sub server pon port 80)
  nchan:
    build: docker/nchan 
    container_name: nchan
    volumes:
      - ./docker/nchan/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nchan/conf/default:/etc/nginx/sites-available/default
      - ./docker/nchan/logs/:/var/log/nginx/
    ports:
      - "8013:80" # nchan public ip
    networks:
      agent:
        ipv4_address: 172.25.0.101
      default:

  # api server (Carver Framework APP & API namespace)
  api:
    build: docker/node
    container_name: api
    volumes:
      - ./server:/usr/src/service
    environment:
      - NODE_ENV=development
      - RPC_USER=${RPC_USER}
      - RPC_PASSWORD=${RPC_PASSWORD}
    depends_on:
      - mongo
      - nchan
      - rabbitmq
    ports:
      - "3001:3001" # reservation api
      - "4001:9229" # Debugging Port
    command: tail -f /dev/null # For debugging if you comment the line above (to run server manually)
    networks:
      agent:
        ipv4_address: 172.25.0.100
      default:

  # blockchain sync (Carver Framework SYNC namespace)
  sync:
    build: docker/node
    container_name: sync
    volumes:
      - ./server:/usr/src/service
    environment:
      - NODE_ENV=development
      - RPC_USER=${RPC_USER}
      - RPC_PASSWORD=${RPC_PASSWORD}
    ports:
      - "4002:9229" # Debugging Port
    depends_on:
      - mongo
      - rabbitmq
      - bwk
    command: tail -f /dev/null # For debugging if you comment the line above (to run server manually)
    networks:
      agent:
        ipv4_address: 172.25.0.104
      default:

  # mongodb (database)
  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./docker/mongo/data:/data
    expose:
      - 27017
    networks:
      agent:
        ipv4_address: 172.25.0.102

  # rabbitmq (messaging broker for Carver Framework)
  rabbitmq:
    container_name: rabbitmq
    build: docker/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      agent:
        ipv4_address: 172.25.0.103

  # coin - bwk - Bulwark
  bwk:
    container_name: bwk
    build: docker/coins/bwk
    volumes:
      - ./docker/coins/bwk/data:/home/bulwark/.bulwark
    ports:
      - "52547:52547"
      - "52543:52543"
    environment:
      - RPC_USER=${RPC_USER}
      - RPC_PASSWORD=${RPC_PASSWORD}
    networks:
      agent:
        ipv4_address: 172.25.0.110

networks:
  agent:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24